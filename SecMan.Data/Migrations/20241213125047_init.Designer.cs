// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecMan.Data.SQLCipher;

#nullable disable

namespace SecMan.Data.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20241213125047_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<ulong>("RolesId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("RoleZone", b =>
                {
                    b.Property<ulong>("RolesId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ZonesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolesId", "ZonesId");

                    b.HasIndex("ZonesId");

                    b.ToTable("RoleZone");
                });

            modelBuilder.Entity("SecMan.Data.Init.InitFileType", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Vers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("InitFileTypes");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.Applications", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.Dev", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeploymentStatus")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DevPermVer")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DevPolVer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastConnDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Legacy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("RoleVer")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("SysPolVer")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserVer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vers")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("ZoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Devs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevDef", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("App")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Vers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DevDefs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevDefLang", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.ToTable("DevDefLangs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermDef", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Posn")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("Vers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.ToTable("DevPermDefs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermDefLang", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DevPermDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DevPermDefId");

                    b.ToTable("DevPermDefLangs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermVal", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("DevPermDefId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Val")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ZoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.HasIndex("DevPermDefId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ZoneId");

                    b.ToTable("DevPermVals");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolDef", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Posn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValDflt")
                        .HasColumnType("TEXT");

                    b.Property<double>("ValMax")
                        .HasColumnType("REAL");

                    b.Property<double>("ValMin")
                        .HasColumnType("REAL");

                    b.Property<string>("ValType")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Vers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.ToTable("DevPolDefs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolDefLang", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DevPolDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DevPolDefId");

                    b.ToTable("DevPolDefLangs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolVal", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("DevPolDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Val")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("ZoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.HasIndex("DevPolDefId");

                    b.HasIndex("ZoneId");

                    b.ToTable("DevPolVals");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevSigVal", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Auth")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("DevDefId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("DevPermDefId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Note")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Sign")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ZoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DevDefId");

                    b.HasIndex("DevPermDefId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ZoneId");

                    b.ToTable("DevSigVals");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.EventLogs", b =>
                {
                    b.Property<int>("EventLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("AuthorizingUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<int>("Severity")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SigningUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventLogId");

                    b.HasIndex("AuthorizingUserId");

                    b.HasIndex("SigningUserId");

                    b.HasIndex("UserId");

                    b.ToTable("EventLogs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.PasswordHistory", b =>
                {
                    b.Property<int>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntryId");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordHistories");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.RSAKeys", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublicKey")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RSAKeys");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.Role", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsLoggedOutType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SuperUser", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SuperUsers");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeat", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Common")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TestConnection")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SysFeats");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatLang", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("SysFeatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SysFeatId");

                    b.ToTable("SysFeatLangs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatProp", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Posn")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SysFeatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.Property<string>("Val")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ValMax")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ValMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValType")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Vers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SysFeatId");

                    b.ToTable("SysFeatProps");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatPropLang", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("SysFeatPropId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SysFeatPropId");

                    b.ToTable("SysFeatPropLangs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biometric")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BiometricDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ChangePassword")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domain")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EnabledDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("FirstLogin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("InActiveDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLegacy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogoutDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LegacySupport")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LockedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LockedReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PasswordDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PasswordExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PasswordExpiryEnable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RFI")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RFIDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ResetPassword")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResetPasswordTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Retired")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RetiredDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SessionExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.Zone", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecMan.Data.SQLCipher.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleZone", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecMan.Data.SQLCipher.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.Dev", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", "DevDef")
                        .WithMany()
                        .HasForeignKey("DevDefId");

                    b.HasOne("SecMan.Data.SQLCipher.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("DevDef");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevDefLang", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", null)
                        .WithMany("Langs")
                        .HasForeignKey("DevDefId");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermDef", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", null)
                        .WithMany("DevPermDefs")
                        .HasForeignKey("DevDefId");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermDefLang", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevPermDef", null)
                        .WithMany("Langs")
                        .HasForeignKey("DevPermDefId");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermVal", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", "DevDef")
                        .WithMany()
                        .HasForeignKey("DevDefId");

                    b.HasOne("SecMan.Data.SQLCipher.DevPermDef", "DevPermDef")
                        .WithMany()
                        .HasForeignKey("DevPermDefId");

                    b.HasOne("SecMan.Data.SQLCipher.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("SecMan.Data.SQLCipher.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("DevDef");

                    b.Navigation("DevPermDef");

                    b.Navigation("Role");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolDef", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", null)
                        .WithMany("DevPolDefs")
                        .HasForeignKey("DevDefId");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolDefLang", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevPolDef", null)
                        .WithMany("Langs")
                        .HasForeignKey("DevPolDefId");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolVal", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", "DevDef")
                        .WithMany()
                        .HasForeignKey("DevDefId");

                    b.HasOne("SecMan.Data.SQLCipher.DevPolDef", "DevPolDef")
                        .WithMany()
                        .HasForeignKey("DevPolDefId");

                    b.HasOne("SecMan.Data.SQLCipher.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("DevDef");

                    b.Navigation("DevPolDef");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevSigVal", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.DevDef", "DevDef")
                        .WithMany()
                        .HasForeignKey("DevDefId");

                    b.HasOne("SecMan.Data.SQLCipher.DevPermDef", "DevPermDef")
                        .WithMany()
                        .HasForeignKey("DevPermDefId");

                    b.HasOne("SecMan.Data.SQLCipher.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("SecMan.Data.SQLCipher.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("DevDef");

                    b.Navigation("DevPermDef");

                    b.Navigation("Role");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.EventLogs", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.User", "AuthorizingUser")
                        .WithMany()
                        .HasForeignKey("AuthorizingUserId");

                    b.HasOne("SecMan.Data.SQLCipher.User", "SigningUser")
                        .WithMany()
                        .HasForeignKey("SigningUserId");

                    b.HasOne("SecMan.Data.SQLCipher.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AuthorizingUser");

                    b.Navigation("SigningUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.PasswordHistory", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.User", "User")
                        .WithMany("PasswordHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatLang", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.SysFeat", null)
                        .WithMany("Langs")
                        .HasForeignKey("SysFeatId");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatProp", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.SysFeat", "SysFeat")
                        .WithMany("SysFeatProps")
                        .HasForeignKey("SysFeatId");

                    b.Navigation("SysFeat");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatPropLang", b =>
                {
                    b.HasOne("SecMan.Data.SQLCipher.SysFeatProp", null)
                        .WithMany("Langs")
                        .HasForeignKey("SysFeatPropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevDef", b =>
                {
                    b.Navigation("DevPermDefs");

                    b.Navigation("DevPolDefs");

                    b.Navigation("Langs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPermDef", b =>
                {
                    b.Navigation("Langs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.DevPolDef", b =>
                {
                    b.Navigation("Langs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeat", b =>
                {
                    b.Navigation("Langs");

                    b.Navigation("SysFeatProps");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.SysFeatProp", b =>
                {
                    b.Navigation("Langs");
                });

            modelBuilder.Entity("SecMan.Data.SQLCipher.User", b =>
                {
                    b.Navigation("PasswordHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
